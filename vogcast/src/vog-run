#!/usr/bin/python3.7
__author__='Nadya Moisseeva (nadya.moisseeva@hawaii.edu)'
__date__='July 2021'

#import supporting modules
import sys
sys.path.append('.')
from set_vog_env import *
import os
import logging
import datetime as dt
import meteorology, source, emissions, dispersion, post_process, extras

#set up logging
logging.basicConfig(level=logging.DEBUG,format='%(asctime)s %(message)s', datefmt='[%Y-%m-%d %H:%M:%S %Z]')


### Main ###
if __name__ == '__main__':
	logging.info('BEGIN VOG PIPELINE RUN')
	
	#read date input and determine run typ
	args = parse_inputs()				
	if args.date:
		rundate = args.date
		logging.info('Performing historic run for: %s%s' %(rundate, args.cycle))
		os.environ['runtype'] = 'historic'	
	else:
		rundate = dt.datetime.now().strftime('%Y%m%d')	
		logging.info('Performing real-time run for: %s%s' %(rundate,args.cycle))	
		os.environ['runtype'] = 'realtime'
	forecast = '%s%s' %(rundate,args.cycle)
	os.environ['config_path'] = args.config
	os.environ['forecast'] = forecast
	os.environ['cycle'] = args.cycle
	os.environ['rundate'] = rundate

	#load configuration settings
	settings = read_config(os.environ['config_path'])

	#set shared environmental variables
	config_keys = ['vog_root','run_dir','runhrs','max_dom','spinup']
	for key in config_keys:
		set_env_var(settings, key)

	#set common paths
	os.environ['run_path'] = os.path.join(os.environ['run_dir'],forecast)
	os.environ['src'] = os.path.join(os.environ['vog_root'],'src')
	os.environ['hys_rundir'] = os.path.join(os.environ['run_path'],'hysplit')
	set_env_var(settings['dispersion'],'hys_path')
	
	#create/locate run folders and pipeline json
	create_run_dir()
	if settings['rerun']:
		json_path = os.path.join(os.environ['run_dir'],os.environ['forecast'],'vog_run.json')
		run_modules = settings['modules']
		os.environ['json_path'] = json_path	
		#for modules to be rerun, update config settings in existing runjson
		update_user_settings(run_modules)
	else:
		json_path = create_run_json(os.environ['config_path'])
		run_modules = ['meteorology','emissions','source','dispersion','post_process','extras']
		os.environ['json_path'] = json_path

	#run the pipeline modules	
	if 'meteorology' in run_modules:
		meteorology.main()

	if 'emissions' in run_modules:
		emissions.main()

	if 'source' in run_modules:
		source.main()

	if 'dispersion' in run_modules:
		dispersion.main()

	if 'post_process' in run_modules:
		#TODO RENAME THIS CONFIG AND EVERYWHERE ELSE: ANNOYING UNDERSCORE
		post_process.main()

	if 'extras' in run_modules:
		extras.main()

logging.info('PIPELINE RUN COMPLETE: {}'.format(os.environ['forecast']))	
