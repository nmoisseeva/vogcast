#!/usr/bin/python3.7

# Setup environment for the vog model run
#
__author__='Nadya Moisseeva (nadya.moisseeva@hawaii.edu)'
__date__='July 2021'

 ### Inputs ###
#TODO This CANNOT be hardcoded: provide as mandatory input option
config_path = '../vog.config' 		#json config file (assumed vog_root location)

#import supporting modules
import sys
sys.path.append('.')
from set_vog_env import *
import os
import logging
import datetime as dt
import run_meteorology, conv_arl, run_plumerise, get_hvo_emissions, run_dispersion, post_process

#set up logging
logging.basicConfig(level=logging.DEBUG,format='%(asctime)s %(message)s', datefmt='[%Y-%m-%d %H:%M:%S %Z]')


### Main ###
if __name__ == '__main__':
	logging.info('BEGIN VOG PIPELINE RUN')
	
	#read date input and determine run typ
	args = parse_inputs()				
	if args.date:
		rundate = args.date
		logging.info('Performing historic run for: %s%s' %(rundate, args.cycle))	
	else:
		rundate = dt.datetime.now().strftime('%Y%m%d')	
		logging.info('Performing real-time run for: %s%s' %(rundate,args.cycle))	
	forecast = '%s%s' %(rundate,args.cycle)
	os.environ['forecast'] = forecast
	os.environ['cycle'] = args.cycle
	os.environ['rundate'] = rundate

	#load configuration settings
	settings = read_config(config_path)

	#set shared environmental variables
	set_env_var(settings, 'vog_root')
	set_env_var(settings, 'run_dir')
	set_env_var(settings, 'runhrs')
	set_env_var(settings, 'freq')
	set_env_var(settings, 'max_dom')

	#TODO this needs to be served and input argument
	os.environ['config_path'] = os.path.join(os.environ['vog_root'], 'vog.config')

	#set full run path
	os.environ['run_path'] = os.path.join(os.environ['run_dir'],forecast)
	os.environ['bin'] = os.path.join(os.environ['vog_root'],'bin')

	#set vertiables for dispersion
	#includes: conv_arl, run_dispersion
	#TODO move this to dispersion module
	set_env_var(settings['dispersion'], 'hys_path')
	set_env_var(settings['dispersion'], 'spinup')
	os.environ['hys_rundir'] = os.path.join(os.environ['run_path'],'hysplit')
	
	#create storage folders and pipeline json
	create_run_dir()
	json_path = create_run_json(config_path)
	os.environ['json_path'] = json_path
	
	#run meteorology module
	run_meteorology.main()

	#update emissions
	get_hvo_emissions.main()

	#calculate plume rise
	run_plumerise.main()

	#run dispersion
	run_dispersion.main()

	#run post processing
	post_process.main()
	
	#run graphics

	#run archiving
